#Область ОбработчикиСобытийФормы
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
	Если Сред(СтрокаСоединенияИнформационнойБазы(), 1,4) = "File" тогда
		
		Элементы.ФормаЗапуститьLongPulling.Доступность = Истина;
		
		//Элементы.ФормаЗадатьРасписаниеLongPulling.Доступность = Ложь;
		
	КонецЕсли;

	ОбновлениеМодуляОбмена();
	
КонецПроцедуры

&НаСервере
Процедура ОбновлениеМодуляОбмена()
	
	Выборка = ПланыОбмена.Б_ОбменССайтом.Выбрать();
	Попытка
		Пока Выборка.Следующий() Цикл
			
			Если НЕ Выборка.Ссылка.ЭтотУзел тогда
			
				ОсновныеПараметры = Новый Структура;
				Б_ОбменССайтомСервер.ДобавитьОсновныеНастройкиВПараметры(Выборка.Ссылка, ОсновныеПараметры);
				Б_ОбменССайтомСервер.ДобавитьНастройкиОбменаВПараметры(Выборка.Ссылка, ОсновныеПараметры);

				ОбновлениеУспешно = Б_ОбменССайтомСервер.ПроверкаОбновленияДанныхМодуляОбменаССайтом(ОсновныеПараметры);
				
				Если НЕ ОбновлениеУспешно тогда
					
					Сообщить("Обновление модуля до версии: " + Б_ОбменССайтомСервер.Версия() + " завершено неудачно для узла обмена: " + Строка(Выборка.Ссылка));
					
				КонецЕсли;
			КонецЕсли;
	    КонецЦикла;
	Исключение
		Сообщить(ОписаниеОшибки());	
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗавершенСеансОбменаССайтом" Тогда
		
		Элементы.Список.Обновить();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура РедактироватьКодыБитриксУОбъектов1С(Команда)
	ПараметрыФормы = Новый Структура("", );
	ОткрытьФорму("ПланОбмена.Б_ОбменССайтом.Форма.РедактированиеУОбъектовКодыБитрикс", ПараметрыФормы);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура ЗапуститьLongPulling(Команда)
	
	ЗапуститьLongPullingСервер();
	                   
КонецПроцедуры

&НаСервере
Процедура ЗапуститьLongPullingСервер()
	
	ФоновыеЗадания.Выполнить("Б_ОбменССайтомСервер.ВыполнениеLongPullingФоновыхЗаданий");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура ЗадатьРасписаниеLongPulling(Команда)
	
	НашеРасписание = ПолучитьРасписаниеРегламетногоЗаданияОнлайнОбмена();
	                                                    
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(НашеРасписание);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершитьИзменятьРасписаниеLongPulling", ЭтотОбъект);
	
	Диалог.Показать(ОписаниеОповещения);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьИзменятьРасписаниеLongPulling(РасписаниеЗадания, ДополнительныеПараметры) Экспорт
	
	Если РасписаниеЗадания = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НовоеРасписание = РасписаниеЗадания;
	
	ЗаписатьРегламетноеЗаданиеОнлайнОбмена(НовоеРасписание);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРасписаниеРегламетногоЗаданияОнлайнОбмена()
	
	Возврат РегламентныеЗадания.НайтиПредопределенное(Метаданные.РегламентныеЗадания.Б_ЗаданиеОбменССайтомОнлайн).Расписание;
	
КонецФункции

&НаСервере
Процедура ЗаписатьРегламетноеЗаданиеОнлайнОбмена(Расписание)
	
	РегламентноеЗадание = РегламентныеЗадания.НайтиПредопределенное(Метаданные.РегламентныеЗадания.Б_ЗаданиеОбменССайтомОнлайн);
	РегламентноеЗадание.Расписание = Расписание;
	РегламентноеЗадание.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьОбновлениеДанныхМодуляОбмена(Команда)
	ОбновлениеМодуляОбмена();
КонецПроцедуры

#КонецОбласти

#Область ПрочиеПроцедурыИФункции
////////////////////////////////////////////////////////////////////////////////
// ПРОЧИЕ

&НаКлиенте
Процедура ПослеЗакрытияВопросаОВерсииМодуля(Результат, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти
